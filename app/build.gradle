plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.septech.centauri"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'com.google.android.material:material:1.4.0-alpha02'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.0.0-rc04"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha23"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:1.0.0-alpha23"
    compileOnly 'com.google.android.wearable:wearable:2.8.1'

    //room - local database mapping to sqlite database
    def room_version = "2.2.6"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    //gson module - for serializing classes to json data and back
    implementation 'com.google.code.gson:gson:2.8.6'

    //baseline gradle import modules
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'

    //testing modules
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    /* Dagger2 - We are going to use dagger.android which includes
     * support for Activity and fragment injection so we need to include
     * the following dependencies */
    implementation 'com.google.dagger:dagger-android:2.17'
    implementation 'com.google.dagger:dagger-android-support:2.17'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.17'

    /* Dagger2 - default dependency */
    annotationProcessor 'com.google.dagger:dagger-compiler:2.17'

    // define a BOM and its version
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))

    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    //android support annotations
    implementation 'com.android.support:support-annotations:28.0.0'

    //rxjava 2
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // Retrofit JSON Parsing
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'

    //dexter - permission handling
    implementation 'com.karumi:dexter:6.2.2'

    // Smack API
    def smackVersion = '4.4.2'
    implementation("org.igniterealtime.smack:smack-tcp:$smackVersion") {
        exclude module: 'xpp3'
    }
    implementation("org.igniterealtime.smack:smack-experimental:$smackVersion") {
        exclude module: 'xpp3'
    }
    implementation("org.igniterealtime.smack:smack-android-extensions:$smackVersion") {
        exclude module: 'xpp3'
    }

    // ChatKit - ui for chat
    implementation 'com.github.stfalcon-studio:Chatkit:v0.4.1'

    // Picasso - image handler
    implementation 'com.squareup.picasso:picasso:2.71828'

    //Mockito - testing
    testImplementation "org.mockito:mockito-core:2.19.0"

    testImplementation 'org.robolectric:robolectric:4.2.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.1.2'
}